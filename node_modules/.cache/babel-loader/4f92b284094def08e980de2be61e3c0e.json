{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/j/a/z/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"/Users/j/a/z/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextDrawer = void 0;\n\nconst Utils_1 = require(\"../Utils\");\n\nconst Enums_1 = require(\"../Enums\");\n\nclass TextDrawer {\n  init(container) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var options, shapeOptions, _iterator, _step, character;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = container.options;\n\n            if (!(Utils_1.Utils.isInArray(Enums_1.ShapeType.char, options.particles.shape.type) || Utils_1.Utils.isInArray(Enums_1.ShapeType.character, options.particles.shape.type))) {\n              _context.next = 26;\n              break;\n            }\n\n            shapeOptions = (_a = options.particles.shape.options[Enums_1.ShapeType.character]) !== null && _a !== void 0 ? _a : options.particles.shape.options[Enums_1.ShapeType.char];\n\n            if (!(shapeOptions instanceof Array)) {\n              _context.next = 23;\n              break;\n            }\n\n            _iterator = _createForOfIteratorHelper(shapeOptions);\n            _context.prev = 5;\n\n            _iterator.s();\n\n          case 7:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 13;\n              break;\n            }\n\n            character = _step.value;\n            _context.next = 11;\n            return Utils_1.Utils.loadFont(character);\n\n          case 11:\n            _context.next = 7;\n            break;\n\n          case 13:\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](5);\n\n            _iterator.e(_context.t0);\n\n          case 18:\n            _context.prev = 18;\n\n            _iterator.f();\n\n            return _context.finish(18);\n\n          case 21:\n            _context.next = 26;\n            break;\n\n          case 23:\n            if (!(shapeOptions !== undefined)) {\n              _context.next = 26;\n              break;\n            }\n\n            _context.next = 26;\n            return Utils_1.Utils.loadFont(shapeOptions);\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[5, 15, 18, 21]]);\n    }));\n  }\n\n  draw(context, particle, radius) {\n    const character = particle.shapeData;\n\n    if (character === undefined) {\n      return;\n    }\n\n    const textData = character.value;\n\n    if (textData === undefined) {\n      return;\n    }\n\n    const textParticle = particle;\n\n    if (textParticle.text === undefined) {\n      if (textData instanceof Array) {\n        textParticle.text = Utils_1.Utils.itemFromArray(textData, particle.randomIndexData);\n      } else {\n        textParticle.text = textData;\n      }\n    }\n\n    const text = textParticle.text;\n    const style = character.style;\n    const weight = character.weight;\n    const size = Math.round(radius) * 2;\n    const font = character.font;\n    const fill = particle.fill;\n    context.font = \"\".concat(style, \" \").concat(weight, \" \").concat(size, \"px \\\"\").concat(font, \"\\\"\");\n    const pos = {\n      x: -radius / 2,\n      y: radius / 2\n    };\n\n    if (fill) {\n      context.fillText(text, pos.x, pos.y);\n    } else {\n      context.strokeText(text, pos.x, pos.y);\n    }\n  }\n\n}\n\nexports.TextDrawer = TextDrawer;","map":{"version":3,"sources":["/Users/j/a/z/app/node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","TextDrawer","Utils_1","require","Enums_1","init","container","_a","options","Utils","isInArray","ShapeType","char","particles","shape","type","character","shapeOptions","Array","loadFont","undefined","draw","context","particle","radius","shapeData","textData","textParticle","text","itemFromArray","randomIndexData","style","weight","size","Math","round","font","fill","pos","x","y","fillText","strokeText"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextDrawer = void 0;\nconst Utils_1 = require(\"../Utils\");\nconst Enums_1 = require(\"../Enums\");\nclass TextDrawer {\n    init(container) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = container.options;\n            if (Utils_1.Utils.isInArray(Enums_1.ShapeType.char, options.particles.shape.type) ||\n                Utils_1.Utils.isInArray(Enums_1.ShapeType.character, options.particles.shape.type)) {\n                const shapeOptions = ((_a = options.particles.shape.options[Enums_1.ShapeType.character]) !== null && _a !== void 0 ? _a : options.particles.shape.options[Enums_1.ShapeType.char]);\n                if (shapeOptions instanceof Array) {\n                    for (const character of shapeOptions) {\n                        yield Utils_1.Utils.loadFont(character);\n                    }\n                }\n                else {\n                    if (shapeOptions !== undefined) {\n                        yield Utils_1.Utils.loadFont(shapeOptions);\n                    }\n                }\n            }\n        });\n    }\n    draw(context, particle, radius) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            if (textData instanceof Array) {\n                textParticle.text = Utils_1.Utils.itemFromArray(textData, particle.randomIndexData);\n            }\n            else {\n                textParticle.text = textData;\n            }\n        }\n        const text = textParticle.text;\n        const style = character.style;\n        const weight = character.weight;\n        const size = Math.round(radius) * 2;\n        const font = character.font;\n        const fill = particle.fill;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -radius / 2,\n            y: radius / 2,\n        };\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n    }\n}\nexports.TextDrawer = TextDrawer;\n"]},"metadata":{},"sourceType":"script"}